syntax = "proto3";
package pb;

import "user.proto";
import "chat.proto";

import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.marshaler_all) = true;

service Odd {
  rpc Version(VersionRequest) returns (VersionResponse) {
    option (google.api.http) = {
      get: "/version",
    };
  }

  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get: "/health"
    };
  }

  rpc ToggleReadiness(ToggleReadinessRequest) returns (ToggleReadinessResponse) {
    option (google.api.http) = {
      post: "/ready"
    };
  }

  rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
    option (google.api.http) = {
      get: "/ready"
    };
  }

  rpc GetChats(GetChatsRequest) returns (GetChatsResponse) {
    option (google.api.http) = {get: "/chats"};
  }

  rpc InsertChat(ChatEntity) returns (InsertChatResponse) {
    option (google.api.http) = {post: "/chats"};
  }

  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {
    option (google.api.http) = {get: "/users"};
  }
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {get: "/user"};
  }
}

message LivenessRequest {}

message LivenessResponse {
  string message = 1;
}

message ToggleReadinessRequest {}

message ToggleReadinessResponse {
  string message = 1; 
}

message ReadinessRequest {}

message ReadinessResponse {
  string message = 1; 
}

message VersionRequest {
}

message VersionResponse {
  string version = 1;
}

